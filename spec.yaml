name: zero2prod
# すべての利用可能なオプションの一覧は、https://www.digitalocean.com/docs/app-platform/#regional-availability
# を参照すること。
# リージョンのスラグは、https://www.digitalocean.com/docs/platform/availability-matrix/
# から取得できる。
# それらは小文字で指定する必要がある。
# `fra`はフランクフルト（ドイツ - 欧州）を意味する。
region: fra
services:
  - name: zero2prod
    # リポジトリルートへの相対パス
    dockerfile_path: Dockerfile
    source_dir: .
    github:
      # リポジトリを作成した時期によって、GitHub上のデフォルトブランチが`master`という名前になっているかもしれない。
      branch: main
      # `main`へのコミットごとに新しいバージョンをデプロイする!
      # ここで、継続的デプロイがやってくる!
      deploy_on_push: true
      # 例えば、LukeMathWalker/zero-to-productionのように詳細を埋める!
      repo: xjr1300/zero2prod
    # アプリケーションが健全であることを確認するために、DigitalOceanが使用するプローブを有効化
    health_check:
      # ヘルスチェックエンドポイントへのパス
      # それは最終的に役に立つことがわかった!
      http_path: /health_check
    # The port the application will be listening on for incoming requests
    # アプリケーションのポートは、受信リクエストを待ち受ける。
    # それは、configuration/production.yamlファイルで指定したものと一致する必要がある!
    http_port: 8000
    # 本番ワークロードでは、少なくとも2つにする!
    # しかし、今のところは請求書をコントロールしよう!
    instance_count: 1
    instance_size_slug: basic-xxs
    # すべての受信リクエストはアプリによってルーティングされるべきである。
    routes:
      - path: /
databases:
  # PG = Postgres
  - engine: PG
    # データベース名
    name: newsletter
    # もう一度、支払いを少なく保つ。
    num_nodes: 1
    size: db-s-dev-database
    # Postgresのバージョン - ここでは最新を使用する。
    version: "15"
